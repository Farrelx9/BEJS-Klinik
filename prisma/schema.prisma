generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  dokter
  pasien
}

model User {
  id             String           @id @default(cuid())
  username       String           @unique
  password       String
  nama           String
  email          String           @unique
  noTelp         String
  alamat         String
  role           Role             @default(pasien)
  is_verified    Boolean          @default(false)
  profilePicture String?
  createdAt      DateTime         @default(now())

  // Relasi
  otp            Otp[]
  notifikasi     Notifikasi[]
  janjiTemu      JanjiTemu[]
  konsultasiChat Konsultasi_Chat[]
  riwayat        Riwayat[]
  rekamMedis     Rekam_Medis[]
}

model Otp {
  id_otp      String   @id @default(cuid())
  id_user     String
  kode_otp    String
  expiry_time DateTime
  is_used     Boolean  @default(false)
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [id_user], references: [id])
}

model Notifikasi {
  id_notifikasi String   @id @default(cuid())
  judul         String
  pesan         String
  user_id       String
  createdAt     DateTime @default(now())

  user          User     @relation(fields: [user_id], references: [id])
}

model JanjiTemu {
  id_janji      String   @id @default(cuid())
  id_pasien     String
  tanggal_waktu DateTime
  keluhan       String
  status        String
  dokter        String   @default("drg.Irna")
  createdAt     DateTime @default(now())

  pasien        User     @relation(fields: [id_pasien], references: [id])
}

model Konsultasi_Chat {
  id_chat       String   @id @default(cuid())
  id_pasien     String
  waktu_mulai   DateTime
  waktu_selesai DateTime?
  status        String
  pesan         String?
  createdAt     DateTime @default(now())

  pasien        User     @relation(fields: [id_pasien], references: [id])
  pembayaran    Pembayaran?
}

model Pembayaran {
  id_pembayaran     String   @id @default(cuid())
  id_konsultasi     String   @unique
  metode_pembayaran String
  jumlah            Int
  status            String
  tanggal_bayar     DateTime?
  bukti_pembayaran  String?
  createdAt         DateTime @default(now())

  konsultasiChat    Konsultasi_Chat @relation(fields: [id_konsultasi], references: [id_chat])
}

model Jenis_Tindakan {
  id_tindakan    String   @id @default(cuid())
  nama_tindakan  String
  deskripsi      String?
  harga          Int
  createdAt      DateTime @default(now())

  rekamMedis     Rekam_Medis[]
}

model Rekam_Medis {
  id_rekam_medis String   @id @default(cuid())
  id_pasien      String
  nama_pasien    String
  no_telp        String
  alamat         String
  keluhan        String
  diagnosa       String?
  tindakan       String?
  resep_obat     String?
  dokter         String
  tanggal        DateTime @default(now())
  createdAt      DateTime @default(now())

  // Relasi opsional ke jenis tindakan
  tindakan_id    String?
  jenisTindakan  Jenis_Tindakan? @relation(fields: [tindakan_id], references: [id_tindakan])

  pasien         User     @relation(fields: [id_pasien], references: [id])
}

// Model Riwayat (baru ditambahkan)
model Riwayat {
  id_riwayat    String   @id @default(cuid())
  judul         String
  pesan         String
  user_id       String
  createdAt     DateTime @default(now())

  user          User     @relation(fields: [user_id], references: [id])
}
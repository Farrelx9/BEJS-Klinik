generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  dokter
  pasien
}

model User {
  id            String    @id @default(cuid())
  password      String
  email         String    @unique
  role          Role      @default(pasien)
  is_verified   Boolean   @default(false)
  createdAt     DateTime  @default(now())

  // Relasi satu-satu ke Pasien
  pasien        Pasien?   
  otp           Otp[]
}

model Pasien {
  id_pasien      String           @id @default(cuid())
  user_id        String           @unique(map: "Unique_Pasien_User")
  nama           String?
  noTelp         String?
  alamat         String?
  tanggal_lahir  DateTime?
  jenis_kelamin  String?
  profilePicture String?         
  createdAt      DateTime         @default(now())

  // Relasi ke User
  user           User             @relation(fields: [user_id], references: [id])

  // Semua relasi dari pasien ke model lain
  janjiTemu      JanjiTemu[]
  konsultasiChat Konsultasi_Chat[]
  rekamMedis     Rekam_Medis[]
  pembayaran     Pembayaran[]
  notifikasi     Notifikasi[]
  riwayat        Riwayat[]
}

model Otp {
  id_otp      String   @id @default(cuid())
  id_user     String
  kode_otp    String
  expiry_time DateTime
  is_used     Boolean  @default(false)
  purpose     String?
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [id_user], references: [id])
}

model Notifikasi {
  id_notifikasi String   @id @default(cuid())
  judul         String
  pesan         String
  id_pasien     String
  is_read       Boolean  @default(false) 
  createdAt     DateTime @default(now())

  pasien        Pasien   @relation(fields: [id_pasien], references: [id_pasien])
}

model Riwayat {
  id_riwayat    String   @id @default(cuid())
  judul         String
  pesan         String
  id_pasien     String
  createdAt     DateTime @default(now())

  pasien        Pasien   @relation(fields: [id_pasien], references: [id_pasien])
}

model JanjiTemu {
  id_janji      String   @id @default(cuid())
  id_pasien     String?
  tanggal_waktu DateTime
  keluhan       String
  status        String
  dokter        String   @default("drg.Irna")
  createdAt     DateTime @default(now())
  pembayaran    String? //cash || transfer

  pasien      Pasien? @relation(fields: [id_pasien], references: [id_pasien])
}

model Konsultasi_Chat {
  id_chat       String   @id @default(cuid())
  id_pasien     String
  waktu_mulai   DateTime
  waktu_selesai DateTime?
  status        String
  pesan         String?
  createdAt     DateTime @default(now())

  pasien        Pasien   @relation(fields: [id_pasien], references: [id_pasien])
  pembayaran    Pembayaran?
}

model Pembayaran {
  id_pembayaran     String   @id @default(cuid())
  id_konsultasi     String   @unique
  metode_pembayaran String
  jumlah            Int
  status            String
  tanggal_bayar     DateTime?
  bukti_pembayaran  String?
  createdAt         DateTime @default(now())

  konsultasiChat    Konsultasi_Chat @relation(fields: [id_konsultasi], references: [id_chat])
  id_pasien         String?
  pasien            Pasien?         @relation(fields: [id_pasien], references: [id_pasien])
}

model Jenis_Tindakan {
  id_tindakan    String   @id @default(cuid())
  nama_tindakan  String
  deskripsi      String?
  harga          Int
  createdAt      DateTime @default(now())

  rekamMedis     Rekam_Medis[]
}

model Rekam_Medis {
  id_rekam_medis String   @id @default(cuid())
  id_pasien      String
  keluhan        String
  diagnosa       String?
  tindakan       String?
  resep_obat     String?
  dokter         String
  tanggal        DateTime @default(now())
  createdAt      DateTime @default(now())

  tindakan_id    String?
  jenisTindakan  Jenis_Tindakan? @relation(fields: [tindakan_id], references: [id_tindakan])

  pasien         Pasien   @relation(fields: [id_pasien], references: [id_pasien])
}